/**
  * Problem 61. Cyclical figurate numbers
  *
  * Triangle, square, pentagonal, hexagonal, heptagonal, and octagonal numbers are all figurate (polygonal) numbers and are generated by the following formulae:
  * The ordered set of three 4-digit numbers: 8128, 2882, 8281, has three interesting properties.
  * Find the sum of the only ordered set of six cyclic 4-digit numbers for which each polygonal type: triangle, square, pentagonal, hexagonal, heptagonal, and octagonal, is represented by a different number in the set.
  *
  * https://projecteuler.net/problem=61
  **/

val max = 6

class Num (f: Int, x: Int) {
  val last2 = x % 100
  val first2 = x / 100
  val value = x
  val figurate = f // 2 thru 8

  override def toString = s"$x"
}


val pool =

  (45 to 140).map { n=> // Triangle
    new Num(3, n * (n + 1) / 2)
  } ++
  (32 to 99).map { n=> // Square
    new Num(4, n * n)
  } ++
  (26 to 81).map { n=> // Pentagonal
    new Num(5, n * (3 * n - 1) / 2)
  } ++
  (23 to 70).map { n=> // Hexagonal
    new Num(6, n * (2 * n - 1))
  } ++
  (21 to 63).map { n=> // Heptagonal
    new Num(7, n * (5 * n - 3) / 2)
  } ++
  (19 to 58).map { n=> // Octagonal
    new Num(8, n * (3 * n - 2))
  }

// Recursive discovery of the ordered sets
def orderedSet(nums: Vector[Num]): Unit = {
  if (nums.length == max) {
    // should be cyclical
    if (nums.last.last2 == nums(0).first2) {
      println(nums, nums.map(_.value).sum)
    }
  } else {
    pool.filter { n =>
      // 1. last 2 digits should match the first digits of the next number
      // 2. figurate type already in the ordered set should not be repeated

      n.first2 == nums.last.last2 &&
        nums.map(_.figurate).indexOf(n.figurate) == -1
    }.foreach { num =>
      orderedSet(nums :+ num)
    }
  }
}

pool.foreach { item =>
  orderedSet(Vector(item))
}

/*

(Vector(8256, 5625, 2512, 1281, 8128, 2882),28684)
(Vector(5625, 2512, 1281, 8128, 2882, 8256),28684)
(Vector(2882, 8256, 5625, 2512, 1281, 8128),28684)
(Vector(8128, 2882, 8256, 5625, 2512, 1281),28684)
(Vector(2512, 1281, 8128, 2882, 8256, 5625),28684)
(Vector(1281, 8128, 2882, 8256, 5625, 2512),28684)

real    0m1.267s
user    0m1.464s
sys     0m0.131s


 */